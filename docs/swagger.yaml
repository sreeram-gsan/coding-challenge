basePath: /inventory/v1
definitions:
  main.item:
    properties:
      id:
        type: integer
      name:
        type: string
      quantity:
        type: integer
      unit_price:
        type: number
    type: object
host: localhost:8080
info:
  contact:
    email: srga8641@colorado.edu
    name: Sreeram Ganesan
    url: https://sreeramganesan.com
  description: An inventory management API with Go using Gin framework.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://sreeramganesan.com
  title: Inventory API
  version: "1.0"
paths:
  /items:
    get:
      description: Responds with the list of all items as JSON.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.item'
            type: array
      summary: Get items array
      tags:
      - items
    post:
      description: Takes a item JSON and store in DB. Return saved JSON.
      parameters:
      - description: item JSON
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/main.item'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.item'
      summary: Store a new item
      tags:
      - items
  /items/{id}:
    delete:
      description: Takes an id and deletes its value in DB.
      parameters:
      - description: delete item by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.item'
      summary: Deletes an existing item by Id
      tags:
      - items
    get:
      description: Returns the item whose id value matches the provided id.
      parameters:
      - description: search item by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.item'
      summary: Get a single item by id
      tags:
      - items
    patch:
      description: Takes a item JSON and updates its value in DB.
      parameters:
      - description: item JSON
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/main.item'
      - description: update item by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.item'
      summary: Update an existing item
      tags:
      - items
  /items/csv:
    get:
      description: Downloads a csv file with existing data.
      produces:
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            type: text
      summary: Downloads a csv file with existing data.
      tags:
      - items
swagger: "2.0"
